@{
    ViewBag.Title = "Home Page";
}
@model IEnumerable<DapperAbstract.CtpParameters>

<div class="jumbotron">
    <h1>ЦТП 1</h1>
    <p class="lead">ул Сосновая 12</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-large">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(x => x.Id)</th>
                <th>@Html.DisplayNameFor(x => x.BindingId)</th>
                <th>@Html.DisplayNameFor(x => x.RecvDate)</th>
                <th>@Html.DisplayNameFor(x => x.Temp1)</th>
                <th>@Html.DisplayNameFor(x => x.Temp3)</th>
                <th>@Html.DisplayNameFor(x => x.Temp2)</th>
                <th>@Html.DisplayNameFor(x => x.Pressure1)</th>
                <th>@Html.DisplayNameFor(x => x.Pressure2)</th>
                <th>@Html.DisplayNameFor(x => x.Pressure3)</th>
                <th>@Html.DisplayNameFor(x => x.Pressure4)</th>
                <th>@Html.DisplayNameFor(x => x.PumpStatus)</th>
                <th>@Html.DisplayNameFor(x => x.ValveStatus)</th>
            </tr>
            @foreach (DapperAbstract.CtpParameters p in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(x=>p.Id)</td>
                    <td>@Html.DisplayFor(x => p.BindingId)</td>
                    <td>@Html.DisplayFor(x => p.RecvDate)</td>
                    <td>@Html.DisplayFor(x => p.Temp1)</td>
                    <td>@Html.DisplayFor(x => p.Temp2)</td>
                    <td>@Html.DisplayFor(x => p.Temp3)</td>
                    <td>@Html.DisplayFor(x => p.Pressure1)</td>
                    <td>@Html.DisplayFor(x => p.Pressure2)</td>
                    <td>@Html.DisplayFor(x => p.Pressure3)</td>
                    <td>@Html.DisplayFor(x => p.Pressure4)</td>
                    <td>@Html.DisplayFor(x => p.PumpStatus)</td>
                    <td>@Html.DisplayFor(x => p.ValveStatus)</td>
                </tr>
            }
        </table>
    </div>
</div>